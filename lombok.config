# To stop lombok from looking at parent directories for more configuration files it can be included. We suggest you put this in the root of your workspace directory.
config.stopBubbling = true
# Lombok can be configured to add @lombok.Generated annotations to all generated nodes where possible; useful for JaCoCo (which has built in support), or other style checkers and code coverage tools:
lombok.addLombokGeneratedAnnotation = true
## lombok.anyConstructor.addConstructorProperties = [true | false] (default: false)
# If set to true, then lombok will add a @java.beans.ConstructorProperties to generated constructors.
lombok.anyConstructor.addConstructorProperties = true
## lombok.equalsAndHashCode.callSuper = [call | skip | warn] (default: warn)
# If set to call, lombok will generate calls to the superclass implementation of hashCode and equals if your class extends something. If set to skip no such calls are generated. The default behaviour is like skip, with an additional warning.
lombok.equalsAndHashCode.callSuper = call
##  lombok.toString.callSuper = [call | skip | warn] (default: skip)
# If set to call, lombok will generate calls to the superclass implementation of toString if your class extends something. If set to skip no such call is generated. If set to warn no such call is generated either, but lombok does generate a warning to tell you about it.
lombok.toString.callSuper = call
